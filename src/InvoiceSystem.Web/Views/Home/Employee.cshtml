@model IEnumerable<InvoiceSystem.Domain.DTOs.InvoiceDto>
@using InvoiceSystem.Domain.Enums

@{
    ViewData["Title"] = "Employee Dashboard";
    var contracts = ViewBag.PersonalContracts as IEnumerable<InvoiceSystem.Domain.DTOs.ContractDto>;
    var invoices = ViewBag.PersonalInvoices as IEnumerable<InvoiceSystem.Domain.DTOs.InvoiceDto>;
}

<div class="container">
    <h2>Employee Dashboard</h2>

    <!-- Contracts Section -->
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">My Contracts</h3>
        </div>
        <div class="card-body">
            @if (contracts != null && contracts.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Contract Type</th>
                                <th>Pay Grade</th>
                                <th>Daily Rate</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var contract in contracts)
                            {
                                <tr>
                                    <td>@contract.ContractType</td>
                                    <td>@contract.PayGrade</td>
                                    <td>@contract.DailyRate.ToString("C")</td>
                                    <td>@contract.StartDate.ToShortDateString()</td>
                                    <td>@contract.EndDate.ToShortDateString()</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> You don't have any active contracts.
                </div>
            }
        </div>
    </div>

    <!-- Invoices Section -->
    <div class="card">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">My Invoices</h3>
            <a asp-controller="Invoice" asp-action="Create" asp-route-source="Employee" class="btn btn-light">
                <i class="fas fa-plus"></i> Create New Invoice
            </a>
        </div>
        <div class="card-body">
            @if (invoices != null && invoices.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Invoice Number</th>
                                <th>Period</th>
                                <th>Days Worked</th>
                                <th>Total Amount</th>
                                <th>Status</th>
                                <th>Created Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var invoice in invoices)
                            {
                                <tr>
                                    <td>@invoice.InvoiceNumber</td>
                                    <td>@invoice.StartDate.ToShortDateString() - @invoice.EndDate.ToShortDateString()</td>
                                    <td>@invoice.DaysWorked</td>
                                    <td>@invoice.TotalAmount.ToString("C")</td>
                                    <td>
                                        <span class="badge bg-@GetStatusBadgeClass(invoice.Status)">
                                            @invoice.Status
                                        </span>
                                    </td>
                                    <td>@invoice.CreatedAt.ToShortDateString()</td>
                                    <td>
                                        <div class="btn-group">
                                            <a asp-controller="Invoice" asp-action="Details" asp-route-id="@invoice.Id" class="btn btn-info btn-sm">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (invoice.Status == InvoiceSystem.Domain.Enums.InvoiceStatus.Draft)
                                            {
                                                <a asp-controller="Invoice" asp-action="Edit" asp-route-id="@invoice.Id" class="btn btn-warning btn-sm">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <form asp-controller="Invoice" asp-action="Delete" asp-route-id="@invoice.Id" method="post" style="display: inline;">
                                                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this invoice?')">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> You haven't created any invoices yet.
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(InvoiceSystem.Domain.Enums.InvoiceStatus status)
    {
        return status switch
        {
            InvoiceSystem.Domain.Enums.InvoiceStatus.Draft => "secondary",
            InvoiceSystem.Domain.Enums.InvoiceStatus.Submitted => "primary",
            InvoiceSystem.Domain.Enums.InvoiceStatus.Approved => "success",
            InvoiceSystem.Domain.Enums.InvoiceStatus.Rejected => "danger",
            _ => "secondary"
        };
    }
} 